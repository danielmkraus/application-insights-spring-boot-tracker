name: Maven Package and Deployment

on:
  release:
    types: [created]
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          distribution: 'temurin'
          java-version: '17'
          server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Set project version
        env:
          GITHUB_REF: ${{ vars.GITHUB_REF }}
        run: chmod +x ./mvnw && ./mvnw versions:set -DnewVersion=${GITHUB_REF}

      - name: Set up JDK 17 with gitlab settings
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Publish to GitHub Packages Apache Maven
        run: chmod +x ./mvnw && ./mvnw -s $GITHUB_WORKSPACE/settings.xml clean javadoc:jar source:jar package checksum:artifacts deploy  -Dgpg.keyname=${MAVEN_GPG_KEYNAME} -Dgpg.passphrase=${MAVEN_GPG_PASSPHRASE} -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          MAVEN_GPG_KEYNAME: ${{ secrets.MAVEN_GPG_KEYNAME }}

      - name: Publish to Apache Maven Central
        run: chmod +x ./mvnw && ./mvnw -P release clean javadoc:jar source:jar package checksum:artifacts deploy  -Dgpg.keyname=${MAVEN_GPG_KEYNAME} -Dgpg.passphrase=${MAVEN_GPG_PASSPHRASE} -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          MAVEN_GPG_KEYNAME: ${{ secrets.MAVEN_GPG_KEYNAME }}